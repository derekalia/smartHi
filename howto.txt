How To Add a Scene.
1. Add a scene id to app/common/const.js similar to ActiveSceneId.(Lets call it SceneTestSceneId)
2. Create a directory the scene code in app/components/scenes/sceneTest/sceneTestScene.js
3. Template for the sceneTestScene.js looks as follows. Notice that we bind to SwitchSceneAction,
and HerbyBar is included to display the nav bar on top of the scene.

import React, { Component } from 'react';
import {StyleSheet, Text, View, ScrollView, TouchableOpacity,TouchableHighlight, Image } from 'react-native'

//get state management components
import {bindActionCreators} from 'redux';
import {connect} from 'react-redux';

//get internal components
import {SwitchSceneAction} from '../../../actions';
import {HerbyBar}         from '../../../common/controls.js';

class SceneTestScene extends Component {
    render() {
        return (
            <View style={[{ flex: 1 }]}>
            <HerbyBar name="Scene Test"  navigator={this.props.navigator}/>
                <View>
                    <TouchableOpacity onPress={()=>this._goToAnotherScene()}>
                    <Text>Go to another Scene</Text>
                    </TouchableOpacity>
                </View>
            </View>
        );
    }
    _goToAnotherScene() {
        this.props.SwitchSceneAction(HereGoesAnotherSceneId);
    }
}
//
// Connect SwitchSceneAction to props
//
function mapActionToProps(dispatch) { return bindActionCreators({ SwitchSceneAction }, dispatch); }
module.exports = connect(null,mapActionToProps)(SceneTestScene);

4. Add SceneTestSceneId and SceneTestScene to the tab this scene is going to. For example, if in profileTab.js make it similar to LicenseeLoginSceneId, and LicenseeLoginScene.
5. Done
